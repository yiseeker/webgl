<!DOCTYPE html>
<html>
<head>

  <link rel='stylesheet' href='/stylesheets/style.css' />
  <script src="/javascripts/three.js"></script>
  <script src="/javascripts/static.js"></script>
  <style type="text/css">
    div#canvas-frame {
      border: none;
      cursor: pointer;
      width: 100%;
      height: 600px;
      background-color: #EEEEEE;
    }

  </style>

</head>
<body>

<div id="canvas-frame"></div>

<script>
  var scene=new THREE.Scene();
  var camera=new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
  var renderer=new THREE.WebGLRenderer();
  renderer.setSize(600,600);
  document.getElementById('canvas-frame').appendChild(renderer.domElement);

  var geometry=new THREE.Geometry();
  var p1=new THREE.Vector3(0,0,0);
  var p2=new THREE.Vector3(3,0,0);
  var color1 = new THREE.Color( 0xFFFFFF );
  var color2 = new THREE.Color( 0xFFFFFF );
  geometry.vertices.push(p1);
  geometry.vertices.push(p2);
  geometry.colors.push(color1);
  geometry.colors.push(color2);

  var material=new THREE.LineBasicMaterial({vertexColors: THREE.VertexColors});
  var line = new THREE.Line(geometry,material,THREE.LinePieces);
  scene.add(line);

  camera.position.z = 5;

  var stats = new Stats();
  stats.domElement.style.position = 'absolute';
  stats.domElement.style.left = '0px';
  stats.domElement.style.top = '0px';
  document.getElementById('canvas-frame').appendChild(stats.domElement);
  setInterval( function () {
    stats.begin();
    render();
    stats.end();
  }, 1000 / 60 );

  function render(){
    requestAnimationFrame(render);
    line.rotation.y+=0.1;
    renderer.render(scene, camera);
  }

</script>
</body>
</html>
